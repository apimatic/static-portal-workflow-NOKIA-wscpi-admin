{
    "openapi": "3.0.1",
    "info": {
        "title": "WaveSuite Event Notifications API",
        "description": "API definition for WaveSuite Event Notification Service",
        "version": "22.08"
    },
    "tags": [
        {
            "name": "EventSubscriptions",
            "description": "Event subscriptions API"
        },
        {
            "name": "EventDefinitions",
            "description": "Event definitions API"
        }
    ],
    "paths": {
        "/subscriptions/{subscriptionId}": {
            "get": {
                "tags": [
                    "EventSubscriptions"
                ],
                "description": "Retrieve subscription with the given id",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "ID of subscription to get",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseSubscription"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EventSubscriptions"
                ],
                "description": "Delete subscription with the given id",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "ID of subscription to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseVoid"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/subscriptions": {
            "get": {
                "tags": [
                    "EventSubscriptions"
                ],
                "description": "Retrieve all subscriptions",
                "operationId": "get_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseListSubscription"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "EventSubscriptions"
                ],
                "description": "Create a new subscription",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseSubscription"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/subscriptions/{subscriptionId}/update": {
            "post": {
                "tags": [
                    "EventSubscriptions"
                ],
                "description": "Update an existing subscription",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "ID of subscription to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseSubscription"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/event-definitions": {
            "get": {
                "tags": [
                    "EventDefinitions"
                ],
                "description": "Retrieve all the event definitions",
                "operationId": "getEventDefinitions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EventDefinition"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BaseResponseSubscription": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Subscription"
                    },
                    "error": {
                        "$ref": "#/components/schemas/HTTPError"
                    }
                }
            },
            "EventDeliveryFailure": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the notification method being used to send notifications.",
                        "enum": [
                            "REST_HOOK"
                        ]
                    },
                    "failureTime": {
                        "type": "string",
                        "description": "The time when this failure occurred.",
                        "format": "date-time"
                    }
                },
                "description": "Method of event notification",
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "REST_HOOK": "#/components/schemas/RestHookDeliveryFailure"
                    }
                }
            },
            "EventId": {
                "type": "object",
                "properties": {
                    "application": {
                        "type": "string",
                        "description": "Name of the application that generated the event.",
                        "example": "WSCP"
                    },
                    "category": {
                        "type": "string",
                        "description": "The category this event belongs to.",
                        "example": "UserManagement"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the event.",
                        "example": "UserCreated"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version of this event",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "HTTPError": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of the error.",
                        "example": "BAD_REQUEST",
                        "enum": [
                            "ILLEGAL_STATE",
                            "NOT_SUPPORTED",
                            "NOT_FOUND",
                            "IN_USE",
                            "ALREADY_EXISTS",
                            "MISSING",
                            "DB_CONNECTIVITY",
                            "WARNING",
                            "UNAUTHORIZED",
                            "INTERNAL_SERVER_ERROR",
                            "BAD_REQUEST",
                            "SERVICE_UNAVAILABLE",
                            "UNKNOWN"
                        ]
                    },
                    "info": {
                        "type": "string",
                        "description": "Description of the error.",
                        "example": "Entity not found"
                    }
                },
                "description": "Represents an HTTP Error."
            },
            "NoAuthRestHookAuthenticationMethod": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RestHookAuthenticationMethod"
                    }
                ]
            },
            "NotificationMethod": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the notification method being used to send notifications.",
                        "enum": [
                            "REST_HOOK"
                        ]
                    }
                },
                "description": "Method of event notification",
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "REST_HOOK": "#/components/schemas/RestHookNotificationMethod"
                    }
                }
            },
            "RestHookAuthenticationMethod": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the authentication method to use for REST Hooks.",
                        "enum": [
                            "NO_AUTH",
                            "USER_PASSWORD"
                        ]
                    }
                },
                "description": "Method of REST Hook authentication",
                "discriminator": {
                    "propertyName": "name",
                    "mapping": {
                        "NO_AUTH": "#/components/schemas/NoAuthRestHookAuthenticationMethod",
                        "USER_PASSWORD": "#/components/schemas/UserPasswordRestHookAuthenticationMethod"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/NoAuthRestHookAuthenticationMethod"
                    },
                    {
                        "$ref": "#/components/schemas/UserPasswordRestHookAuthenticationMethod"
                    }
                ]
            },
            "RestHookDeliveryFailure": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventDeliveryFailure"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "httpStatusCode": {
                                "type": "integer",
                                "description": "The HTTP status code that was received from the external client.",
                                "format": "int32"
                            },
                            "responseBody": {
                                "type": "string",
                                "description": "The response received from the external client."
                            }
                        }
                    }
                ]
            },
            "RestHookNotificationMethod": {
                "required": [
                    "callbackUrl",
                    "restHookAuthenticationMethod"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/NotificationMethod"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "callbackUrl": {
                                "type": "string",
                                "description": "The callback URL to send events to."
                            },
                            "restHookAuthenticationMethod": {
                                "$ref": "#/components/schemas/RestHookAuthenticationMethod"
                            }
                        }
                    }
                ]
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "lastKnownSequenceId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "notificationMethod": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RestHookNotificationMethod"
                            }
                        ]
                    },
                    "eventIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventId"
                        }
                    },
                    "lastFailure": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RestHookDeliveryFailure"
                            }
                        ]
                    },
                    "creationTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdatedTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "The data for a success response."
            },
            "UserPasswordRestHookAuthenticationMethod": {
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RestHookAuthenticationMethod"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "username": {
                                "type": "string",
                                "description": "The username to use as authentication for REST Hook calls."
                            },
                            "password": {
                                "type": "string",
                                "description": "The password to use as authentication for REST Hook calls."
                            }
                        }
                    }
                ]
            },
            "BaseResponseVoid": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "description": "The data for a success response."
                    },
                    "error": {
                        "$ref": "#/components/schemas/HTTPError"
                    }
                }
            },
            "BaseResponseListSubscription": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "description": "The data for a success response.",
                        "items": {
                            "$ref": "#/components/schemas/Subscription"
                        }
                    },
                    "error": {
                        "$ref": "#/components/schemas/HTTPError"
                    }
                }
            },
            "SubscriptionUpdateRequest": {
                "type": "object",
                "properties": {
                    "lastKnownSequenceId": {
                        "type": "integer",
                        "description": "The last known sequence ID.",
                        "format": "int64"
                    },
                    "notificationMethod": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RestHookNotificationMethod"
                            }
                        ]
                    },
                    "eventIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The events to subscribe to.",
                        "items": {
                            "$ref": "#/components/schemas/EventId"
                        }
                    }
                },
                "description": "The request to update subscription."
            },
            "EventDefinition": {
                "type": "object",
                "properties": {
                    "eventId": {
                        "$ref": "#/components/schemas/EventId"
                    },
                    "description": {
                        "type": "string",
                        "description": "Short description of the event definition.",
                        "example": "User creation event"
                    },
                    "discriminator": {
                        "type": "string",
                        "description": "The unique identifier for the type of this event.",
                        "example": "WSCPUserManagementUserCreated"
                    }
                },
                "description": "Event definition"
            },
            "SubscriptionCreateRequest": {
                "required": [
                    "eventIds",
                    "notificationMethod"
                ],
                "type": "object",
                "properties": {
                    "lastKnownSequenceId": {
                        "type": "integer",
                        "description": "The last known sequence ID. If it is omitted, only new events (after subscription) will be sent.\n\nFor 0, plays back all past events that are still available in the underlying message queues",
                        "format": "int64"
                    },
                    "notificationMethod": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/RestHookNotificationMethod"
                            }
                        ]
                    },
                    "eventIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The events to subscribe to.",
                        "items": {
                            "$ref": "#/components/schemas/EventId"
                        }
                    }
                },
                "description": "The request to create subscription."
            },
            "EventNotification": {
                "required": [
                    "discriminator"
                ],
                "type": "object",
                "properties": {
                    "eventId": {
                        "$ref": "#/components/schemas/EventId"
                    },
                    "eventDate": {
                        "type": "string",
                        "description": "The date and time when this event occurred.",
                        "format": "date-time"
                    },
                    "sourceTenantId": {
                        "type": "string",
                        "description": "The UUID of the tenant that generated the event."
                    },
                    "affectedTenantIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                        "items": {
                            "type": "string",
                            "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                        }
                    },
                    "discriminator": {
                        "type": "string",
                        "description": "The unique identifier for the type of this event. This is a combination of the application, category and type",
                        "example": "WSCPUserManagementUserCreated"
                    }
                },
                "description": "The event payload.",
                "discriminator": {
                    "propertyName": "discriminator",
                    "mapping": {
                        "WSSEServiceOnboarded1": "#/components/schemas/ServiceOnboardedEvent",
                        "WSSEServiceOrderControlReview1": "#/components/schemas/ServiceOrderControlReviewEvent",
                        "WSSEServiceOrderSubscriberStateChanged1": "#/components/schemas/ServiceOrderSubscriberStateChangedEvent",
                        "WSSEServiceOrderControlBusinessError1": "#/components/schemas/ServiceOrderControlBusinessErrorEvent",
                        "WSSEServiceOrderControlProvisionFailedBusinessError1": "#/components/schemas/ServiceOrderControlProvisionFailedBusinessErrorEvent",
                        "WSSEServiceOrderControlMANUAL_PROVISION1": "#/components/schemas/ServiceOrderControlManualProvisionEvent",
                        "WSSEServiceOrderControlTechnicalError1": "#/components/schemas/ServiceOrderControlTechnicalErrorEvent",
                        "WSSEServiceOrderProviderStateChanged1": "#/components/schemas/ServiceOrderProviderStateChangeEvent",
                        "WSSEServiceOrderCreated1": "#/components/schemas/ServiceOrderCreatedEvent",
                        "WSSEServiceOrderProvisioned1": "#/components/schemas/ServiceOrderProvisionedEvent",
                        "WSSEServiceOrderControlSERVICE_NAMING1": "#/components/schemas/ServiceOrderControlServiceNamingEvent",
                        "WSSEServiceOffboarded1": "#/components/schemas/ServiceOffboardedEvent",
                        "WSSEServiceOrderControlConfirm1": "#/components/schemas/ServiceOrderControlConfirmEvent",
                        "WSSEServiceStateChanged1": "#/components/schemas/ServiceStateChangedEvent"
                    }
                }
            },
            "EventMessage": {
                "type": "object",
                "properties": {
                    "sequenceId": {
                        "type": "integer",
                        "description": "The UUID that identifies this event's location in the event stream.",
                        "format": "int64"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The UUID of the subscription associated to this event."
                    },
                    "event": {
                        "$ref": "#/components/schemas/EventNotification"
                    }
                },
                "description": "The event message that will be published to external clients."
            },
            "ServiceOrderControlProvisionFailedBusinessErrorEvent": {
                "type": "object",
                "description": "The event published when provisioning of a service order has failed.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item. The field applies for events pertaining to service order items."
                            },
                            "errorCode": {
                                "type": "string",
                                "description": "The specific business error that has occurred.",
                                "example": "PATH_NOT_FOUND"
                            },
                            "affectedEntities": {
                                "type": "array",
                                "description": "The list of affected entities that correspond to this error.",
                                "items": {
                                    "$ref": "#/components/schemas/AffectedEntity"
                                }
                            },
                            "activity": {
                                "type": "string",
                                "description": "The activity which has failed to complete for the service order."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOffboardedEvent": {
                "type": "object",
                "description": "The event published after a service is offboarded.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceId": {
                                "type": "string",
                                "description": "The UUID of the service."
                            },
                            "serviceType": {
                                "type": "string",
                                "description": "The type of service that was offboarded.",
                                "enum": [
                                    "L1CS",
                                    "COMPOSITE"
                                ]
                            },
                            "serviceSubtype": {
                                "type": "string",
                                "description": "The subtype of the service that was offboarded.",
                                "enum": [
                                    "SUBSCRIBER",
                                    "ACCESS",
                                    "TRANSIT"
                                ]
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderControlReviewEvent": {
                "type": "object",
                "description": "The event published when a service order requires the provider to review.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item. The field applies for events pertaining to service order items."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderCreatedEvent": {
                "type": "object",
                "description": "The event published after a service order is created.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item."
                            },
                            "serviceOrderType": {
                                "type": "string",
                                "description": "The type of service order that was created.",
                                "enum": [
                                    "CREATE",
                                    "GROUP",
                                    "MODIFY_SERVICE_SPECIFICATION",
                                    "TERMINATE"
                                ]
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderProvisionedEvent": {
                "type": "object",
                "description": "The event published after provisioning is completed by the provider to satisfy the service order.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item."
                            },
                            "connectionId": {
                                "type": "string",
                                "description": "The newly provisioned network connection id."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderControlTechnicalErrorEvent": {
                "type": "object",
                "description": "The event published when a technical error has occurred with the service order workflow.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item. The field applies for events pertaining to service order items."
                            },
                            "errorCode": {
                                "type": "string",
                                "description": "The specific technical error that has occurred.",
                                "example": "SERVICE_UNREACHABLE"
                            },
                            "httpCode": {
                                "type": "integer",
                                "description": "The specific http code, if applicable.",
                                "format": "int32",
                                "example": 400
                            },
                            "origin": {
                                "type": "string",
                                "description": "Indicates where the error originated from.",
                                "example": "INVENTORY"
                            },
                            "message": {
                                "type": "string",
                                "description": "A message that further describes the error."
                            },
                            "activity": {
                                "type": "string",
                                "description": "The activity which has failed to complete for the service order."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOnboardedEvent": {
                "type": "object",
                "description": "The event published after a service is onboarded.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceId": {
                                "type": "string",
                                "description": "The UUID of the service."
                            },
                            "serviceType": {
                                "type": "string",
                                "description": "The type of service that was onboarded.",
                                "enum": [
                                    "L1CS",
                                    "COMPOSITE"
                                ]
                            },
                            "serviceSubtype": {
                                "type": "string",
                                "description": "The subtype of the service that was onboarded.",
                                "enum": [
                                    "SUBSCRIBER",
                                    "ACCESS",
                                    "TRANSIT"
                                ]
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The associated service order id."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceStateChangedEvent": {
                "type": "object",
                "description": "The event published after the state of a service is changed.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceId": {
                                "type": "string",
                                "description": "The UUID of the service."
                            },
                            "previousState": {
                                "$ref": "#/components/schemas/ServiceLifecycleState"
                            },
                            "newState": {
                                "$ref": "#/components/schemas/ServiceLifecycleState"
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderSubscriberStateChangedEvent": {
                "type": "object",
                "description": "The event published when the service order subscriber state changes.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item."
                            },
                            "previousState": {
                                "$ref": "#/components/schemas/SubscriberState"
                            },
                            "newState": {
                                "$ref": "#/components/schemas/SubscriberState"
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderControlConfirmEvent": {
                "type": "object",
                "description": "The event published when a service order requires the provider to confirm service integration.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item. The field applies for events pertaining to service order items."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderProviderStateChangeEvent": {
                "type": "object",
                "description": "The event published when the service order provider state changes.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item."
                            },
                            "previousState": {
                                "$ref": "#/components/schemas/ProviderState"
                            },
                            "newState": {
                                "$ref": "#/components/schemas/ProviderState"
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderControlBusinessErrorEvent": {
                "type": "object",
                "description": "The event published when a business error has occurred with the service order workflow and requires review by the provider.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item. The field applies for events pertaining to service order items."
                            },
                            "errorCode": {
                                "type": "string",
                                "description": "The specific business error that has occurred.",
                                "example": "PATH_NOT_FOUND"
                            },
                            "affectedEntities": {
                                "type": "array",
                                "description": "The list of affected entities that correspond to this error",
                                "items": {
                                    "$ref": "#/components/schemas/AffectedEntity"
                                }
                            },
                            "activity": {
                                "type": "string",
                                "description": "The activity which has failed to complete for the service order."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderControlServiceNamingEvent": {
                "type": "object",
                "description": "The event published to provide service names either manually or by an external server.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item. The field applies for events pertaining to service order items."
                            },
                            "serviceOrderNamingOutboundParameters": {
                                "type": "array",
                                "description": "The collection of naming parameters for service(s) in the service order.",
                                "items": {
                                    "$ref": "#/components/schemas/ServiceOrderNamingOutboundParameters"
                                }
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderControlManualProvisionEvent": {
                "type": "object",
                "description": "The event published when a service order requires the provider to provision the service manually.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EventNotification"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "eventId": {
                                "$ref": "#/components/schemas/EventId"
                            },
                            "eventDate": {
                                "type": "string",
                                "description": "The date and time when this event occurred.",
                                "format": "date-time"
                            },
                            "sourceTenantId": {
                                "type": "string",
                                "description": "The UUID of the tenant that generated the event."
                            },
                            "affectedTenantIds": {
                                "uniqueItems": true,
                                "type": "array",
                                "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it.",
                                "items": {
                                    "type": "string",
                                    "description": "Set of UUIDs of the tenants that were affected by this event and will have visibility to it."
                                }
                            },
                            "serviceOrderId": {
                                "type": "string",
                                "description": "The UUID of the service order."
                            },
                            "serviceOrderItemId": {
                                "type": "string",
                                "description": "The UUID of the service order item. The field applies for events pertaining to service order items."
                            },
                            "discriminator": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "CompletedState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    }
                ]
            },
            "AffectedEntity": {
                "type": "object",
                "properties": {
                    "entityType": {
                        "type": "string",
                        "enum": [
                            "ACCESS_PROFILE",
                            "AUTHENTICATION_TOKEN",
                            "BRANDING",
                            "CAPABILITY_PROFILE",
                            "CATALOG",
                            "CONNECTION",
                            "ENDPOINT",
                            "LIFE_CYCLE_STATE",
                            "LOCATION",
                            "MAINTENANCE_INTERVAL",
                            "NETWORK_ENDPOINT",
                            "NETWORK_EQUIPMENT",
                            "ROLE",
                            "SERVICE",
                            "SERVICE_INTENT",
                            "SERVICE_ORDER",
                            "SERVICE_ORDER_ITEM",
                            "SERVICE_ORDER_POLICY",
                            "SERVICE_SPECIFICATION",
                            "STATE",
                            "TENANT",
                            "UNKNOWN",
                            "USER"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "description": "Entity identifier with a type."
            },
            "ProviderLifecycleState": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the state.",
                        "enum": [
                            "SUBMITTED",
                            "REJECTED",
                            "IN_PROGRESS",
                            "USER_INPUT",
                            "HELD",
                            "COMPLETED",
                            "CANCELLED",
                            "FAILED"
                        ]
                    }
                },
                "description": "Provider lifecycle state.",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "SUBMITTED": "#/components/schemas/SubmittedState",
                        "REJECTED": "#/components/schemas/RejectedState",
                        "IN_PROGRESS": "#/components/schemas/InProgressState",
                        "USER_INPUT": "#/components/schemas/UserInputState",
                        "HELD": "#/components/schemas/HeldState",
                        "COMPLETED": "#/components/schemas/CompletedState",
                        "CANCELLED": "#/components/schemas/CancelledState",
                        "FAILED": "#/components/schemas/FailedState"
                    }
                }
            },
            "SubscriberState": {
                "required": [
                    "type"
                ],
                "type": "object",
                "description": "Service order state from the perspective of a subscriber",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ServiceOrderState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "state": {
                                "type": "string",
                                "enum": [
                                    "SUBMITTED",
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "CANCELLED",
                                    "REJECTED"
                                ]
                            }
                        }
                    }
                ]
            },
            "EntityIdUserTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string",
                        "enum": [
                            "ACCESS_PROFILE",
                            "AUTHENTICATION_TOKEN",
                            "BRANDING",
                            "CAPABILITY_PROFILE",
                            "CATALOG",
                            "CONNECTION",
                            "ENDPOINT",
                            "LIFE_CYCLE_STATE",
                            "LOCATION",
                            "MAINTENANCE_INTERVAL",
                            "NETWORK_ENDPOINT",
                            "NETWORK_EQUIPMENT",
                            "ROLE",
                            "SERVICE",
                            "SERVICE_INTENT",
                            "SERVICE_ORDER",
                            "SERVICE_ORDER_ITEM",
                            "SERVICE_ORDER_POLICY",
                            "SERVICE_SPECIFICATION",
                            "STATE",
                            "TENANT",
                            "UNKNOWN",
                            "USER"
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "UserInputState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "userTask": {
                                "$ref": "#/components/schemas/UserTask"
                            },
                            "userTaskState": {
                                "type": "string",
                                "enum": [
                                    "REQUESTED",
                                    "SUBMITTED",
                                    "ACCEPTED",
                                    "REJECTED"
                                ]
                            }
                        }
                    }
                ]
            },
            "InProgressState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "activity": {
                                "type": "string"
                            },
                            "activityState": {
                                "type": "string",
                                "enum": [
                                    "STARTED",
                                    "COMPLETED"
                                ]
                            }
                        }
                    }
                ]
            },
            "UserTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    }
                },
                "description": "User task",
                "discriminator": {
                    "propertyName": "userTaskType",
                    "mapping": {
                        "REVIEW": "#/components/schemas/ReviewTask",
                        "CONFIRM": "#/components/schemas/ConfirmationTask",
                        "UUID": "#/components/schemas/EntityIdUserTask",
                        "MANUAL_PROVISION": "#/components/schemas/ManualProvisionUserTask",
                        "TECHNICAL_ERROR": "#/components/schemas/TechnicalErrorUserTask",
                        "BUSINESS_ERROR": "#/components/schemas/BusinessErrorUserTask",
                        "SERVICE_NAMING": "#/components/schemas/ServiceNamingTask",
                        "PROVISION_FAILED_BUSINESS_ERROR": "#/components/schemas/ProvisionFailedBusinessErrorUserTask"
                    }
                }
            },
            "ProvisionFailedBusinessErrorUserTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "affectedEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AffectedEntity"
                        }
                    },
                    "reason": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string",
                        "enum": [
                            "MANUALLY_FULFILL",
                            "RETRY",
                            "CANCEL"
                        ]
                    }
                }
            },
            "ServiceNamingTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "serviceNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceOrderNamingInbound"
                        }
                    },
                    "serviceOrderNamingParameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceOrderNamingOutboundParameters"
                        }
                    }
                }
            },
            "RejectedState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "reason": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ServiceOrderNamingOutboundParameters": {
                "required": [
                    "clientProtocol",
                    "routeDiversityEnabled",
                    "serviceLocationNameA",
                    "serviceLocationNameZ",
                    "serviceRate",
                    "subTenantName"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "The service order creation item id. Used to refer to parts of a diverse service."
                    },
                    "serviceLocationNameA": {
                        "type": "string",
                        "description": "The name of the A location for the service order item."
                    },
                    "serviceLocationNameZ": {
                        "type": "string",
                        "description": "The name of the Z location for the service order item."
                    },
                    "subTenantName": {
                        "type": "string",
                        "description": "The subtenant name."
                    },
                    "clientProtocol": {
                        "type": "string",
                        "description": "The client protocol for the service order item.",
                        "example": "Ethernet"
                    },
                    "networkProtection": {
                        "type": "string",
                        "description": "The network protection type for the service order item.",
                        "example": "OPS"
                    },
                    "clientProtection": {
                        "type": "string",
                        "description": "The client protection type for the service order item.",
                        "example": "OPS"
                    },
                    "routeDiversityEnabled": {
                        "type": "boolean",
                        "description": "Whether route diversity is enabled or not for the service order."
                    },
                    "serviceRate": {
                        "type": "string",
                        "description": "The service rate for the service order item.",
                        "example": "10 GigE"
                    },
                    "uniAttributesA": {
                        "$ref": "#/components/schemas/UniAttributes"
                    },
                    "uniAttributesZ": {
                        "$ref": "#/components/schemas/UniAttributes"
                    },
                    "externalInterfaceAttributesA": {
                        "$ref": "#/components/schemas/ExternalInterfaceAttributes"
                    },
                    "externalInterfaceAttributesZ": {
                        "$ref": "#/components/schemas/ExternalInterfaceAttributes"
                    }
                },
                "description": "Parameters for naming service order objects such as service and network connection. These are used in the outbound direction to an external name generating service."
            },
            "TechnicalErrorUserTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "httpCode": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "origin": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string",
                        "enum": [
                            "RETRY",
                            "CANCEL"
                        ]
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "ReviewTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "approved": {
                        "type": "boolean"
                    }
                }
            },
            "SubscriberServiceLifecycleState": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "PROVIDER",
                            "SUBSCRIBER"
                        ]
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "IN_PROGRESS",
                            "FULFILLED",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "SubmittedState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    }
                ]
            },
            "BusinessErrorUserTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "affectedEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AffectedEntity"
                        }
                    },
                    "reason": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string",
                        "enum": [
                            "PROCEED",
                            "CANCEL"
                        ]
                    }
                }
            },
            "ProviderState": {
                "required": [
                    "type"
                ],
                "type": "object",
                "description": "Service order state from the perspective of a provider.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ServiceOrderState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "state": {
                                "$ref": "#/components/schemas/ProviderLifecycleState"
                            },
                            "consumerState": {
                                "type": "string",
                                "enum": [
                                    "SUBMITTED",
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "CANCELLED",
                                    "REJECTED"
                                ]
                            }
                        }
                    }
                ]
            },
            "ServiceLifecycleState": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "PROVIDER",
                            "SUBSCRIBER"
                        ]
                    }
                },
                "description": "Service lifecycle state",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PROVIDER": "#/components/schemas/ProviderServiceLifecycleState",
                        "SUBSCRIBER": "#/components/schemas/SubscriberServiceLifecycleState"
                    }
                }
            },
            "ConfirmationTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    }
                }
            },
            "HeldState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "heldState": {
                                "type": "string",
                                "enum": [
                                    "STARTED",
                                    "COMPLETED"
                                ]
                            }
                        }
                    }
                ]
            },
            "FailedState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "userTask": {
                                "$ref": "#/components/schemas/UserTask"
                            },
                            "userTaskState": {
                                "type": "string",
                                "enum": [
                                    "REQUESTED",
                                    "SUBMITTED",
                                    "ACCEPTED",
                                    "REJECTED"
                                ]
                            },
                            "activity": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "CancelledState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "reason": {
                                "type": "string"
                            },
                            "cancelProgressionState": {
                                "type": "string",
                                "enum": [
                                    "STARTED",
                                    "COMPLETED",
                                    "FAILED"
                                ]
                            },
                            "failedRollbackTasks": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "ProviderServiceLifecycleState": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "PROVIDER",
                            "SUBSCRIBER"
                        ]
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "PROVISIONED",
                            "ACTIVATING",
                            "ACTIVATED",
                            "MONITORING_INITIATED",
                            "FULFILLED",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "ServiceOrderState": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "The type of the service order state.",
                        "enum": [
                            "PROVIDER",
                            "SUBSCRIBER"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "description": "Service order state",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "PROVIDER": "#/components/schemas/ProviderState",
                        "SUBSCRIBER": "#/components/schemas/SubscriberState"
                    }
                }
            },
            "BaseBusinessErrorUserTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "affectedEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AffectedEntity"
                        }
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "MinimalProviderState": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProviderLifecycleState"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The type of the state.",
                                "enum": [
                                    "SUBMITTED",
                                    "REJECTED",
                                    "IN_PROGRESS",
                                    "USER_INPUT",
                                    "HELD",
                                    "COMPLETED",
                                    "CANCELLED",
                                    "FAILED"
                                ]
                            }
                        }
                    }
                ]
            },
            "ManualProvisionUserTask": {
                "type": "object",
                "properties": {
                    "userTaskType": {
                        "type": "string",
                        "enum": [
                            "CONFIRM",
                            "REVIEW",
                            "UUID",
                            "MANUAL_PROVISION",
                            "TECHNICAL_ERROR",
                            "BUSINESS_ERROR",
                            "PROVISION_FAILED_BUSINESS_ERROR",
                            "SERVICE_NAMING"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "taskDiscriminator": {
                        "type": "string"
                    },
                    "connectionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
